<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:sbid._VM;assembly=sbid"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="sbid._V.ClassDiagram_P_V">
  
  <Design.DataContext>
    <vm:ClassDiagram_P_VM/>
  </Design.DataContext>

  <UserControl.Styles>
    <!--ItemsControl的样式-->
    <Style Selector="ItemsControl">
      <!--使用Canvas作面板-->
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <!--这里需要为Canvas设置颜色才能在按下时相应鼠标事件-->
            <Canvas Background="#EEEEEE" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <!--右键菜单行为，这里是要传入鼠标位置的-->
              <Canvas.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="创建自定义复合类型" Command="{Binding $parent[UserControl].CreateUserTypeVM}"/>
                  <MenuItem Header="创建进程模板" Command="{Binding $parent[UserControl].CreateProcessVM}"/>
                  <MenuItem Header="创建公理" Command="{Binding $parent[UserControl].CreateAxiomVM}"/>
                  <MenuItem Header="创建初始知识" Command="{Binding $parent[UserControl].CreateInitialKnowledgeVM}"/>
                  <MenuItem Header="创建功能安全性质" Command="{Binding $parent[UserControl].CreateSafetyPropertyVM}"/>
                  <MenuItem Header="创建信息安全性质" Command="{Binding $parent[UserControl].CreateSecurityPropertyVM}"/>
                  <MenuItem Header="创建信道模板" Command="{Binding $parent[UserControl].CreateCommChannelVM}"/>
                </ContextMenu>
              </Canvas.ContextMenu>
            </Canvas>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <!--里面放控件,即xxx_VM-->
      <Setter Property="ItemTemplate">
        <Setter.Value>
          <DataTemplate DataType="vm:ViewModelBase">
            <ContentControl Content="{Binding .}"/>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!--Avalonia的ItemsControl中没有ItemContainerStyle,用选择器+样式来绑定Canvas.Left等附加属性-->
    <Style Selector="ItemsControl > ContentPresenter">
      <Setter Property="Canvas.Left" Value="{Binding X}"/>
      <Setter Property="Canvas.Top" Value="{Binding Y}"/>
    </Style>
  </UserControl.Styles>
  
  <DockPanel>
    <!--<StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="LightGray">
      <Button Command="{Binding CreateUserTypeVM}">创建UserType</Button>
      <Button Command="{Binding CreateProcessVM}">创建Process</Button>
      <Button Command="{Binding CreateAxiomVM}">创建Axiom</Button>
      <Button Command="{Binding CreateInitialKnowledgeVM}">创建Initial Knowledge</Button>
      <Button Command="{Binding CreateSafetyPropertyVM}">创建Safety Property</Button>
      <Button Command="{Binding CreateSecurityPropertyVM}">创建Security Property</Button>
      <Button Command="{Binding CreateCommChannelVM}">创建CommChannel</Button>
    </StackPanel>-->
    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="LightGray">
      <Button Command="{Binding $parent[UserControl].ExportImage}">导出图片</Button>
    </StackPanel>
    <!--面板-->
    <ScrollViewer Name="scrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
      <ItemsControl Name="panel" DockPanel.Dock="Bottom" Items="{Binding UserControlVMs}" Height="1000" Width="2000"/>
    </ScrollViewer>
  </DockPanel>
</UserControl>
